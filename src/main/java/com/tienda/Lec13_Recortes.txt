****************
Recorte 001: Dependencias
****************

 <dependency>
            <groupId>net.sf.jasperreports</groupId>
            <artifactId>jasperreports</artifactId>
            <version>6.20.1</version>
        </dependency>


****************
Recorte 002: Ajuste en SecurityConfig.java
****************

.requestMatchers(
                        "/reportes/**")
                .hasRole("ADMIN")

****************
Recorte 003: Actualizaci√≥n en plantilla.html
****************

<li class="nav-item px-2" sec:authorize="hasRole('ROLE_ADMIN')">
                                <a class="nav-menu-link nav-link" th:href="@{/reportes/principal}">Reportes</a>
                            </li>


****************
Recorte 004: principal.html (en un nuevo folder templates.reportes)
****************

<!DOCTYPE html>
<html xmlns:th="http://www.thymeleaf.org"
      xmlns="http://www.w3.org/1999/xhtml"
      xmlns:sec="http://thymeleaf.org/extras/spring-security">
    <head th:replace="~{layout/plantilla :: head}">
        <title>TechShop</title>        
    </head>
    <body>
        <header th:replace="~{layout/plantilla :: header}"/>
        <div class="container">
            <div class="row"></div>
            <div class="row row-cols-6" >
                <a th:href="@{/}" class="btn btn-primary">
                    <i class='fas fa-reply'></i> [[#{accion.regresar}]]</a>
            </div>
            <div class="row"></div>
            <div class="row row-cols-3">
                <div class="card">
                    <div class="card-header text-center">
                        Reporte Cientes
                    </div>
                    <div class="card-body">
                        <a th:href="@{/reportes/clientes?tipo=vPdf}" class="btn btn-primary">
                            <i class='fas fa-eye'></i><i class='fas fa-file-pdf'></i>
                        </a>
                        <a th:href="@{/reportes/clientes?tipo=Pdf}" class="btn btn-success">
                            <i class='fas fa-download'></i><i class='fas fa-file-pdf'></i>
                        </a>
                        <a th:href="@{/reportes/clientes?tipo=Xls}" class="btn btn-warning">
                            <i class='fas fa-download'></i><i class='fas fa-file-excel'></i>
                        </a>
                        <a th:href="@{/reportes/clientes?tipo=Csv}" class="btn btn-danger">
                            <i class='fas fa-download'></i><i class='fas fa-file-csv'></i>
                        </a>
                    </div>
                </div>
                <div class="card">
                    <div class="card-header text-center">
                        Reporte ventas
                    </div>
                    <div class="card-body">
                        <a th:href="@{/reportes/ventas?tipo=vPdf}" class="btn btn-primary">
                            <i class='fas fa-eye'></i><i class='fas fa-file-pdf'></i>
                        </a>
                        <a th:href="@{/reportes/ventas?tipo=Pdf}" class="btn btn-success">
                            <i class='fas fa-download'></i><i class='fas fa-file-pdf'></i>
                        </a>
                        <a th:href="@{/reportes/ventas?tipo=Xls}" class="btn btn-warning">
                            <i class='fas fa-download'></i><i class='fas fa-file-excel'></i>
                        </a>
                        <a th:href="@{/reportes/ventas?tipo=Csv}" class="btn btn-danger">
                            <i class='fas fa-download'></i><i class='fas fa-file-csv'></i>
                        </a>
                    </div>
                </div>                
            </div>
        </div>

        <footer th:replace="~{layout/plantilla :: footer}"/>         
    </body>
</html>


****************
Recorte 005: proceso
****************

1. Crear folder "reportes" en default package
2. Copiar los archivos .jasper


****************
Recorte 006: reporteController.java
****************


import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.IOException;
import java.io.InputStream;
import java.sql.SQLException;
import java.util.HashMap;

import java.util.Map;
import javax.sql.DataSource;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperExportManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.export.JRCsvExporter;
import net.sf.jasperreports.engine.export.ooxml.JRXlsxExporter;
import net.sf.jasperreports.export.SimpleCsvExporterConfiguration;
import net.sf.jasperreports.export.SimpleExporterInput;
import net.sf.jasperreports.export.SimpleOutputStreamExporterOutput;
import net.sf.jasperreports.export.SimpleWriterExporterOutput;
import net.sf.jasperreports.export.SimpleXlsxReportConfiguration;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.core.io.ClassPathResource;
import org.springframework.core.io.InputStreamResource;
import org.springframework.core.io.Resource;
import org.springframework.http.HttpHeaders;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
@RequestMapping("/reportes")
public class ReporteController {

    @Autowired
    DataSource datasource;

    @GetMapping("/principal")
    public String principal() {
        return "/reportes/principal";
    }

    
    @GetMapping("/clientes")
    public ResponseEntity<Resource> reporteClientes(@RequestParam String tipo) throws IOException {
        //Por desarrollar
        var reporte=null;
        var parametros=null;
        return reportePrivado(reporte, parametros, tipo);
    }
    
    @GetMapping("/ventas")
    public ResponseEntity<Resource> reporteVentas(@RequestParam String tipo) throws IOException {
        //Por desarrollar
        var reporte=null;
        var parametros=null;
        return reportePrivado(reporte, parametros, tipo);
    }

    private ResponseEntity<Resource> reportePrivado(String reporte, Map<String, Object> parametros, String tipo) throws IOException {
        try {
            
            String estilo="";
            if ("vPdf".equals(tipo)) {
                estilo="inline; ";
            } else {
              String estilo="attachment; ";
            } 
            
            if ("Pdf".equals(tipo) || "vPdf".equals(tipo)) {
                //Por hacer
            } else if ("Xls".equals(tipo)) {
                //por hacer
            } else if ("Csv".equals(tipo)) {
                //por hacer
            }
            //por hacer
            return null;//ResponseEntity.ok().headers(headers).contentLength(data.length).contentType(mediaType).body(new InputStreamResource(new ByteArrayInputStream(data)));

        } catch (SQLException | JRException e) {
            return null;
        }

    }
}